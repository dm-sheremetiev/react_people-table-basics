{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","components/Loader/Loader.tsx","components/api/api.ts","components/PersonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/HomePage/HomePage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","App","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","parentName","slug","sex","name","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","hasError","setHasError","useEffect","catch","finally","useParams","noPeopleCondition","length","findPerson","list","targetName","find","map","born","died","motherName","fatherName","NotFoundPage","HomePage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.2e1db4be.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nconst PageNavLink: React.FC<Props> = ({\n  to,\n  text,\n}) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../../types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person | null;\n  parentName?: string\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, parentName }) => (\n  <>\n    {person ? (\n      <Link\n        to={`../${person.slug}`}\n        className={classNames(\n          { 'has-text-danger': person.sex === 'f' },\n        )}\n      >\n        {person.name}\n      </Link>\n    ) : (\n      <>\n        {parentName}\n      </>\n    )}\n\n  </>\n\n);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../api/api';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const { slug = '' } = useParams();\n\n  const noPeopleCondition = !isLoading && people.length === 0 && !hasError;\n\n  const findPerson = (list: Person[], targetName: string) => {\n    return list.find(person => person.name === targetName) || null;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {hasError ? (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          ) : (\n            <>\n              {noPeopleCondition && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n              {!isLoading && (\n                <table\n                  data-cy=\"peopleTable\"\n                  className=\"\n                    table is-striped\n                    is-hoverable\n                    is-narrow\n                    is-fullwidth\n                  \"\n                >\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Sex</th>\n                      <th>Born</th>\n                      <th>Died</th>\n                      <th>Mother</th>\n                      <th>Father</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {people.map(person => (\n                      <tr\n                        data-cy=\"person\"\n                        key={person.name}\n                        className={classNames({\n                          'has-background-warning': person.slug === slug,\n                        })}\n                      >\n                        <td>\n                          <PersonLink person={person} />\n                        </td>\n\n                        <td>{person.sex}</td>\n\n                        <td>{person.born}</td>\n\n                        <td>{person.died}</td>\n\n                        <td>\n                          {person.motherName ? (\n                            <PersonLink\n                              person={\n                                findPerson([...people], person.motherName)\n                              }\n                              parentName={person.motherName}\n                            />\n                          ) : (\n                            '-'\n                          )}\n                        </td>\n\n                        <td>\n                          {person.fatherName ? (\n                            <PersonLink\n                              person={\n                                findPerson([...people], person.fatherName)\n                              }\n                              parentName={person.fatherName}\n                            />\n                          ) : (\n                            '-'\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              )}\n\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">\n    Page not found\n  </h1>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">\n    Home Page\n  </h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { HomePage } from './components/HomePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}